"use client";

import Image from "next/image";
import { useState } from "react";

export default function ImageGenerator() {
  const [prompt, setPrompt] = useState("");
  const [generatedText, setGeneratedText] = useState("");
  const [imageUrl, setImageUrl] = useState("");
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);
    setError(null);
    setImageUrl("");
    setGeneratedText("");

    if (!prompt) {
      setError("Please enter a prompt");
      return;
    }

    try {
      const response = await fetch("/api/genai", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ prompt }),
      });

      if (!response.ok) {
        throw new Error("Failed to generate image");
      }

      const data = await response.json();
      setImageUrl(data.imageUrl);
      setGeneratedText(data.text);
    } catch (err) {
      setError(
        err instanceof Error ? err.message : "An unknown error occurred"
      );
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="h-screen bg-gradient-to-br from-slate-900 to-slate-800 text-white flex items-center justify-center px-4">
      <div className="w-full max-w-xl bg-white/5 backdrop-blur-md border border-white/10 rounded-2xl shadow-xl p-8">
        <h1 className="text-3xl font-bold mb-6 text-center tracking-tight text-white">
          üé® AI Image Generator
        </h1>
        <form onSubmit={handleSubmit}>
          <label
            htmlFor="prompt"
            className="block text-sm font-medium mb-1 text-slate-300"
          >
            Describe your image:
          </label>
          <input
            type="text"
            id="prompt"
            value={prompt}
            onChange={(e) => setPrompt(e.target.value)}
            placeholder="A robot painting a sunset..."
            className="w-full px-4 py-2 text-sm rounded-lg bg-white/10 text-white placeholder-slate-400 border border-white/20 focus:outline-none focus:ring-2 focus:ring-indigo-500 transition"
            required
          />

          <button
            type="submit"
            disabled={loading}
            className="mt-4 w-full py-2 px-4 bg-indigo-600 hover:bg-indigo-700 text-white rounded-lg font-semibold transition disabled:opacity-50 disabled:cursor-not-allowed"
          >
            {loading ? "Generating..." : "Generate Image"}
          </button>
        </form>

        {error && (
          <p className="mt-4 text-red-400 text-sm text-center">{error}</p>
        )}

        {generatedText && (
          <div className="mt-6">
            <h2 className="text-lg font-semibold mb-1">üìù Description:</h2>
            <p className="text-slate-300">{generatedText}</p>
          </div>
        )}

        {imageUrl && (
          <div className="mt-6">
            <h2 className="text-lg font-semibold mb-2">üñºÔ∏è Result:</h2>
            <div className="rounded-xl overflow-hidden shadow-lg border border-white/10">
              <Image
                src={imageUrl}
                alt="Generated by AI"
                width={512}
                height={512}
                className="w-full object-cover"
              />
            </div>
          </div>
        )}
      </div>
    </div>
  );
}
